{"version":3,"sources":["components/Header/Header.js","store/initialState.js","store/store.js","components/Navigation/Navigation.js","utils/myHooks.js","components/ButtonLink/ButtonLink.js","components/Main/in/OperatorThis.js","data/es6.js","components/Row/Row.js","components/TableWrap/TableWrap.js","components/Main/in/Es6.js","data/prom.js","components/Main/in/Prom.js","images/JS_proto.jpg","data/proto.js","components/Main/in/Proto.js","data/expr.js","components/Main/in/Expr.js","data/methodsArray.js","components/Main/in/Arrays.js","data/numbers.js","components/Main/in/Numbers.js","data/strings.js","components/Main/in/Strings.js","data/toolsReact.js","components/Main/in/ToolsReact.js","data/typeData.js","components/Main/in/TypeData.js","data/operators.js","components/Main/in/Operators.js","data/git.js","components/Main/in/Git.js","data/webpack.js","components/Main/in/Webpack.js","data/mongo.js","components/Main/in/Mongo.js","components/Main/in/AboutRedux.js","components/Main/Main.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","initialState","localStorage","getItem","JSON","parse","blockJS","jsAll","es6","prom","proto","expr","toolsReact","operatorThis","arrays","numbers","strings","typeData","operators","aboutRedux","blockEnv","envAll","git","webpack","mongo","TOGGLE_BLOCK","TOGGLE_ALL_BLOCK","store","createStore","state","action","isJS","hasOwnProperty","on","isEnv","block","type","newArr","key","composeWithDevTools","useStyles","makeStyles","theme","root","width","margin","checkBox","padding","spacing","Navigation","classes","useSelector","stateCheckboxJS","stateCheckboxEnv","dispatch","useDispatch","handleClickBlock","e","target","name","handleClickAll","useEffect","setItem","stringify","FormControlLabel","control","Checkbox","color","size","checked","onClick","label","button","marginTop","backgroundColor","table","cell","whiteSpace","ButtonLink","url","href","Button","variant","endIcon","OperatorThis","rowsData","method","description","example","Row","row","useState","open","setOpen","TableRow","TableCell","IconButton","aria-label","style","colSpan","Collapse","in","timeout","unmountOnExit","TableWrap","rows","TableContainer","component","Paper","Table","TableHead","TableBody","map","index","Es6","Prom","Proto","src","image","alt","Expr","Arrays","Numbers","Strings","ToolsReact","TypeData","Operators","Git","Webpack","Mongo","Main","stateBlockJS","stateBlockEnv","AboutRedux","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b85a7a0.chunk.js","sourcesContent":["import './Header.scss';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">Шпаргалка Javascript на одной странице</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","let initialState = {};\r\n\r\nif (localStorage.getItem('userChoise')) {\r\n  initialState = JSON.parse(localStorage.getItem('userChoise'));\r\n} else {\r\n  initialState = {\r\n    blockJS: {\r\n      jsAll: true,\r\n      es6: true,\r\n      prom: true,\r\n      proto: true,\r\n      expr: true,\r\n      toolsReact: true,\r\n      operatorThis: true,\r\n      arrays: true,\r\n      numbers: true,\r\n      strings: true,\r\n      typeData: true,\r\n      operators: true,\r\n      aboutRedux: true,\r\n    },\r\n    blockEnv: {\r\n      envAll: true,\r\n      git: true,\r\n      webpack: true,\r\n      mongo: true,\r\n    },\r\n  };\r\n}\r\n\r\nexport default initialState;\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport initialState from './initialState';\r\n\r\nconst TOGGLE_BLOCK = 'TOGGLE_BLOCK';\r\nconst TOGGLE_ALL_BLOCK = 'TOGGLE_ALL_BLOCK';\r\n\r\nfunction reducer(state = initialState, action) {\r\n  const isJS = state.blockJS.hasOwnProperty(action.on);\r\n  const isEnv = state.blockEnv.hasOwnProperty(action.on);\r\n  const block = isJS ? 'blockJS' : isEnv ? 'blockEnv' : null;\r\n\r\n  switch (action.type) {\r\n    case TOGGLE_BLOCK: {\r\n      return {\r\n        ...state,\r\n        [block]: { ...state[block], [action.on]: !state[block][action.on] },\r\n      };\r\n    }\r\n\r\n    case TOGGLE_ALL_BLOCK: {\r\n      const newArr = {};\r\n      for (const key in state[block]) {\r\n        newArr[key] = !state[block][action.on];\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        [block]: { ...newArr },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const store = createStore(reducer, composeWithDevTools());\r\n\r\nexport const toggleBlock = (block) => ({ type: TOGGLE_BLOCK, on: block });\r\nexport const toggleAllBlock = (block) => ({ type: TOGGLE_ALL_BLOCK, on: block });\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Navigation.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { toggleBlock, toggleAllBlock } from '../../store/store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '180px',\r\n    margin: '0',\r\n  },\r\n  checkBox: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nfunction Navigation() {\r\n  const classes = useStyles();\r\n  const state = useSelector((state) => state);\r\n  const stateCheckboxJS = useSelector((state) => state.blockJS);\r\n  const stateCheckboxEnv = useSelector((state) => state.blockEnv);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClickBlock(e) {\r\n    dispatch(toggleBlock(e.target.name));\r\n  }\r\n\r\n  function handleClickAll(e) {\r\n    dispatch(toggleAllBlock(e.target.name));\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('userChoise', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"nav__theme\">\r\n        <div className=\"nav__title-container\">\r\n          <h3 className=\"nav__title\">Javascript</h3>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"jsAll\"\r\n                checked={stateCheckboxJS.jsAll}\r\n                onClick={handleClickAll}\r\n              />\r\n            }\r\n            label=\"Включить все\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"nav__trigger-container\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"aboutRedux\"\r\n                checked={stateCheckboxJS.aboutRedux}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Redux\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"es6\"\r\n                checked={stateCheckboxJS.es6}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Синтаксис ES6\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"prom\"\r\n                checked={stateCheckboxJS.prom}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Промисы\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"proto\"\r\n                checked={stateCheckboxJS.proto}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Наследование\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"operatorThis\"\r\n                checked={stateCheckboxJS.operatorThis}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"this\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"expr\"\r\n                checked={stateCheckboxJS.expr}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Express.js\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"toolsReact\"\r\n                checked={stateCheckboxJS.toolsReact}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"React\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"arrays\"\r\n                checked={stateCheckboxJS.arrays}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Методы массивов\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"numbers\"\r\n                checked={stateCheckboxJS.numbers}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Методы чисел\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"strings\"\r\n                checked={stateCheckboxJS.strings}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Методы строк\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"typeData\"\r\n                checked={stateCheckboxJS.typeData}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Типы данных\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"operators\"\r\n                checked={stateCheckboxJS.operators}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Операторы\"\r\n            className={classes.root}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"nav__theme\">\r\n        <div className=\"nav__title-container\">\r\n          <h3 className=\"nav__title\">Окружение</h3>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"envAll\"\r\n                checked={stateCheckboxEnv.envAll}\r\n                onClick={handleClickAll}\r\n              />\r\n            }\r\n            label=\"Включить все\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"nav__trigger-container\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"git\"\r\n                checked={stateCheckboxEnv.git}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Git\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"webpack\"\r\n                checked={stateCheckboxEnv.webpack}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Webpack\"\r\n            className={classes.root}\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                name=\"mongo\"\r\n                checked={stateCheckboxEnv.mongo}\r\n                onClick={handleClickBlock}\r\n                className={classes.checkBox}\r\n              />\r\n            }\r\n            label=\"Mongo\"\r\n            className={classes.root}\r\n          />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n    backgroundColor: '#0059b2',\r\n  },\r\n  table: {\r\n    backgroundColor: '#FAF8F7',\r\n  },\r\n  cell: {\r\n    whiteSpace: 'nowrap',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import useStyles from '../../utils/myHooks';\r\nimport { Button } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nfunction ButtonLink({ url }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <a href={url} className=\"block__link\" target=\"blank\">\r\n      <Button variant=\"contained\" color=\"primary\" endIcon={<SendIcon />} className={classes.button}>\r\n        Подробнее\r\n      </Button>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default ButtonLink;\r\n","import ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction OperatorThis() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">this</h2>\r\n      <div className=\"block__info\">\r\n        <p className=\"block__paragraph\">\r\n          Ключевое слово this целиком зависит от того, где и как была вызвана функция. И не важно, в каком месте кода\r\n          функция была написана — привязка this происходит при каждом вызове. Чтобы определить, на что ссылается this,\r\n          нужно исследовать точку вызова функции. Это то место в коде, где происходит вызов функции.\r\n        </p>\r\n\r\n        <p>Установить значение this в функции в зависимости от точки вызова можно так:</p>\r\n        <ol className=\"block__paragraph\">\r\n          <li>По умолчанию.</li>\r\n          <li>При вызове функции как метода объекта.</li>\r\n          <li>Явной привязкой методами call, apply и bind.</li>\r\n          <li>При вызове функции с оператором new</li>\r\n        </ol>\r\n\r\n        <p className=\"block__paragraph\">\r\n          При привязке this по умолчанию в режиме 'use strict' this будет равно undefined, в обычном режиме будет равно\r\n          глобальному объекту window\r\n        </p>\r\n\r\n        <p className=\"block__code\"></p>\r\n      </div>\r\n      <ButtonLink url=\"https://habr.com/ru/post/464163/\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default OperatorThis;\r\n","export const rowsData = [\r\n  {\r\n    method: 'let, const',\r\n    description:\r\n      'let, const и блочная область видимости. Как мы помним, переменная, объявленная через var, видна везде в функции. Переменные var существуют и до объявления. Переменная, объявленная через let (или const), видна только в рамках блока {...}, в котором объявлена.',\r\n    example: `\r\n    var a = 2;\r\n    {\r\n      let a = 3;\r\n      console.log(a); // 3\r\n    }\r\n    console.log(a); // 2\r\n    `,\r\n  },\r\n  {\r\n    method: 'Промисы',\r\n    description: `\r\n    В ES6 появилась встроенная поддержка промисов. Промис это объект, который ждёт выполнения асинхронной операции, после которого (т.е. после выполнения) промис принимает одно из двух состояний: fulfilled (resolved, успешное выполнение) или rejected (выполнено с ошибкой).`,\r\n    example: `\r\n    //fetch возвращает промис\r\n    fetch('/article/promise-chaining/user.json')\r\n      .then(response => response.json())\r\n      .then(user => fetch('https://api.github.com/users/user'))\r\n      .then(response => response.json())\r\n      .then(githubUser => new Promise((resolve, reject) => {\r\n        let img = document.createElement('img');\r\n        img.src = githubUser.avatar_url;\r\n        img.className = \"promise-avatar-example\";\r\n        document.body.append(img);\r\n\r\n        setTimeout(() => {\r\n        img.remove();\r\n        resolve(githubUser);\r\n        }, 3000);\r\n      }))\r\n      .catch(error => alert(error.message));`,\r\n  },\r\n  {\r\n    method: 'async/await',\r\n    description: `\r\n    Специальный синтаксис для работы с промисами. У слова async один простой смысл: эта функция всегда возвращает промис. Значения других типов оборачиваются в завершившийся успешно промис автоматически. Ключевое слово await заставит интерпретатор JavaScript ждать до тех пор, пока промис справа от await не выполнится. После чего оно вернёт его результат, и выполнение кода продолжится. Await можно использовать только внутри async-функций.`,\r\n    example: `\r\n    async function f() {\r\n\r\n      let promise = new Promise((resolve, reject) => {\r\n        setTimeout(() => resolve(\"готово!\"), 1000)\r\n      });\r\n    \r\n      let result = await promise; // будет ждать, пока промис не выполнится (*)\r\n    \r\n      alert(result); // \"готово!\"\r\n    }\r\n    \r\n    f();\r\n    `,\r\n  },\r\n  {\r\n    method: 'const {name, about} = object',\r\n    description: `\r\n    Деструктуризация объекта или массива. Определяются переменные на основе свойств объекта object. У него соответсвенно должны быть эти свойства.`,\r\n    example: `\r\n    const {name, about} = object\r\n    `,\r\n  },\r\n  {\r\n    method: 'const [name, about] = array',\r\n    description: `\r\n    Деструктуризация массива. Определяются переменные на основе элементов массива array. По порядку.`,\r\n    example: `\r\n    const [name, about] = array\r\n    `,\r\n  },\r\n  {\r\n    method: `(a,b) => {...}`,\r\n    description: `\r\n    Стрелочные функции. Используется для сокращения записи, ососбенно часто, когда в параматерах функции нужен анонимный колбэк. При этом запись может быть someFunc(a => a*b), что значит, что передается параметер a, а возвращается a*b (оператор return опускается)`,\r\n    example: `\r\n    (a,b) => {...}\r\n    `,\r\n  },\r\n  {\r\n    method: '...',\r\n    description: `\r\n    Spread / Rest оператор. При использовании в любом итерируемом объекте (iterable), данный оператор \"разбивает\" (\"spread\") его на индивидуальные элементы. Другим распространённым использованием оператора ... является объединение набора значений в один массив. В данном случае оператор работает как \"rest\"`,\r\n    example: `\r\n    const newArr = [...prevArr, x];\r\n    const newObj = {...prevObj, x};\r\n    `,\r\n  },\r\n];\r\n","import { useState } from 'react';\r\nimport { TableCell, TableRow, Collapse } from '@material-ui/core';\r\nimport useStyles from '../../utils/myHooks';\r\nimport Highlight from 'react-highlight';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction Row({ row }) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TableRow onClick={() => setOpen(!open)}>\r\n        <TableCell className={classes.cell}>{row.method}</TableCell>\r\n        <TableCell>{row.description}</TableCell>\r\n        <TableCell>\r\n          {row.example ? (\r\n            <IconButton aria-label=\"expand row\" size=\"small\">\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </TableCell>\r\n      </TableRow>\r\n      {row.example ? (\r\n        <TableRow>\r\n          <TableCell style={{ padding: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Highlight className=\"javascript\">{row.example}</Highlight>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport useStyles from '../../utils/myHooks';\r\nimport Row from '../Row/Row';\r\n\r\nfunction TableWrap({ rows }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Метод</TableCell>\r\n            <TableCell>Описание</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <Row key={index} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default TableWrap;\r\n","import { rowsData } from '../../../data/es6';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Es6() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">ES6</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://habr.com/ru/post/305900/\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Es6;\r\n","export const rowsData = [\r\n  {\r\n    method: 'Про промисы очень подробно',\r\n    description: 'https://learn.javascript.ru/promise',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/prom';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Prom() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">Промисы</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://learn.javascript.ru/promise\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Prom;\r\n","export default __webpack_public_path__ + \"static/media/JS_proto.dcc4d06d.jpg\";","export const rowsData = [\r\n  {\r\n    method: '.__proto__',\r\n    description: 'Любой объект имеет это свойство. Содержит ссылку на прототип',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.prototype',\r\n    description:\r\n      'Любая функция конструктор (и пользовательская и встроенная (String, Array, Object, Number и другие )) содержит это свойство, в котором содержатся методы объекты',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Оператор new',\r\n    description:\r\n      'При вызове функции с этим оператором по умолчанию происходит создание пустого объекта, присвваивается this и в конце возврат этого объекта (return this). Такие функции называются функции-конструкторы.',\r\n    example: `\r\n    function CreateSong(title, artist) {\r\n        this = {}  // неявно, JS это делает по умолчанию\r\n        \r\n        this.title = title;\r\n        this.artist = artist;\r\n        this.isLiked = artist;\r\n      \r\n        return this; // неявно, JS это делает по умолчанию\r\n        \r\n      }\r\n      \r\n      const song = new CreateSong('Ария', 'Беспечный Ангел');\r\n      `,\r\n  },\r\n];\r\n","import image from '../../../images/JS_proto.jpg';\r\nimport { rowsData } from '../../../data/proto';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Proto() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">Наследование</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <img className=\"block__image\" src={image} alt=\"Схема наследования через прототипы\"></img>\r\n      <ButtonLink url=\"https://expressjs.com/ru/\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Proto;\r\n","export const rowsData = [\r\n  {\r\n    method: 'npm i express',\r\n    description: 'Установка фреймворка для сервера Express',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i nodemon -D',\r\n    description:\r\n      'Установка пакета nodemon, который отвечает за пересборку и запуск проекта после сохранения файлов с кодом. Флаг -D - dev зависимость',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/expr';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Expr() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">Express</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://expressjs.com/ru/\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Expr;\r\n","export const rowsData = [\r\n  {\r\n    method: '.length',\r\n    description: 'Длина массива (это свойство, не метод)',\r\n    example: `\r\n    let arr = [\"Яблоко\", \"Апельсин\", \"Груша\"];\r\n    \r\n    console.log(arr.length) // 3;`,\r\n  },\r\n  {\r\n    method: '.pop()',\r\n    description: 'Извлекает элемент с конца',\r\n    example: `\r\n    let fruits = [\"Яблоко\", \"Апельсин\", \"Груша\"];\r\n      \r\n    alert( fruits.pop() ); // удаляем \"Груша\" и выводим его\r\n      \r\n    alert( fruits ); // Яблоко, Апельсин`,\r\n  },\r\n  {\r\n    method: '.push (...items)',\r\n    description: 'Добавляет элементы в конец',\r\n    example: `\r\n    let fruits = [\"Яблоко\", \"Апельсин\"];\r\n      \r\n    fruits.push(\"Груша\");\r\n      \r\n    alert( fruits ); // Яблоко, Апельсин, Груша`,\r\n  },\r\n  {\r\n    method: '.shift()',\r\n    description: 'Извлекает элемент с начала',\r\n    example: `let fruits = [\"Яблоко\", \"Апельсин\", \"Груша\"];\r\n      \r\n      alert( fruits.shift() ); // удаляем Яблоко и выводим его\r\n      \r\n      alert( fruits ); // Апельсин, Груша`,\r\n  },\r\n  {\r\n    method: '.unshift(...items)',\r\n    description: 'Добавляет элементы в начало',\r\n    example: `\r\n    let fruits = [\"Апельсин\", \"Груша\"];\r\n    \r\n    fruits.unshift('Яблоко');\r\n    \r\n    alert( fruits ); // Яблоко, Апельсин, Груша`,\r\n  },\r\n  {\r\n    method: '.slice(start, end)',\r\n    description: 'Возвращает новый массив, в который копирует элементы, начиная с индекса start и до end (не включая)',\r\n    example: `\r\n    let arr = [\"t\", \"e\", \"s\", \"t\"];\r\n      \r\n    alert( arr.slice(1, 3) ); // e,s (копирует с 1 до 3)\r\n    \r\n    alert( arr.slice(-2) ); // s,t (копирует с -2 до конца)`,\r\n  },\r\n  {\r\n    method: '.splice(pos, deleteCount, ...items)',\r\n    description: 'Начиная с индекса pos, удаляет deleteCount элементов и вставляет items, возвращает новый массив',\r\n    example: `\r\n    let arr = [\"Я\", \"изучаю\", \"JavaScript\", \"прямо\", \"сейчас\"];\r\n    \r\n    // удалить 3 первых элемента (начиная с 0) и заменить их другими\r\n    arr.splice(0, 3, \"Давай\", \"танцевать\");\r\n    \r\n    alert( arr ) // теперь [\"Давай\", \"танцевать\", \"прямо\", \"сейчас\"]`,\r\n  },\r\n  {\r\n    method: '.concat(array, ...)',\r\n    description: 'Создаёт новый массив, в который копирует данные из других массивов',\r\n    example: `\r\n    let arr = [1, 2];\r\n      \r\n    // создать массив из: arr и [3,4]\r\n    alert( arr.concat([3, 4]) ); // 1,2,3,4\r\n    \r\n    // создать массив из: arr и [3,4] и [5,6]\r\n    alert( arr.concat([3, 4], [5, 6]) ); // 1,2,3,4,5,6\r\n    \r\n    // создать массив из: arr и [3,4], потом добавить значения 5 и 6\r\n    alert( arr.concat([3, 4], 5, 6) ); // 1,2,3,4,5,6`,\r\n  },\r\n  {\r\n    method: '.indexOf(item, pos)',\r\n    description: 'Ищет item, начиная с позиции pos, и возвращает его индекс или -1, если ничего не найдено',\r\n    example: `\r\n    let arr = [1, 0, false];\r\n\r\n    alert( arr.indexOf(0) ); // 1\r\n    alert( arr.indexOf(false) ); // 2\r\n    alert( arr.indexOf(null) ); // -1`,\r\n  },\r\n  {\r\n    method: '.lastIndexOf(item, pos)',\r\n    description:\r\n      'Ищет item, начиная с позиции pos, и возвращает его индекс или -1, если ничего не найдено. Ищет с конца',\r\n    example: `\r\n    let arr = [1, 0, false];\r\n\r\n    alert( arr.lastIndexOf(0) ); // 1\r\n    alert( arr.lastIndexOf(false) ); // 0\r\n    alert( arr.lastIndexOf(null) ); // -1`,\r\n  },\r\n  {\r\n    method: '.includes(value)',\r\n    description: 'Возвращает true, если в массиве имеется элемент value, в противном случае false',\r\n    example: `\r\n    let arr = [1, 0, false];\r\n\r\n    alert( arr.includes(1) ); // true`,\r\n  },\r\n  {\r\n    method: '.filter(func)',\r\n    description:\r\n      'Фильтрует элементы через функцию и отдаёт массив значений, при прохождении которых через функцию возвращается true',\r\n    example: `\r\n    let users = [\r\n        {id: 1, name: \"Вася\"},\r\n        {id: 2, name: \"Петя\"},\r\n        {id: 3, name: \"Маша\"}\r\n      ];\r\n      \r\n    // возвращает массив, состоящий из двух первых пользователей\r\n    let someUsers = users.filter(item => item.id < 3);\r\n      \r\n    alert(someUsers.length); // 2`,\r\n  },\r\n  {\r\n    method: '.find(func)',\r\n    description:\r\n      'Ищет элементы через функцию и отдаёт первое значение, при прохождении которых через функцию возвращается true',\r\n    example: `\r\n    let users = [\r\n        {id: 1, name: \"Вася\"},\r\n        {id: 2, name: \"Петя\"},\r\n        {id: 3, name: \"Маша\"}\r\n      ];\r\n      \r\n    let user = users.find(item => item.id == 1);\r\n      \r\n     alert(user.name); // Вася`,\r\n  },\r\n  {\r\n    method: '.findIndex()',\r\n    description: 'Похож на find, но возвращает индекс вместо значения',\r\n    example: `\r\n    let users = [\r\n        {id: 1, name: \"Вася\"},\r\n        {id: 2, name: \"Петя\"},\r\n        {id: 3, name: \"Маша\"}\r\n      ];\r\n      \r\n    let user = users.findIndex(item => item.id == 1);\r\n      \r\n    alert(user.name); // 0`,\r\n  },\r\n  {\r\n    method: '.forEach(func)',\r\n    description: 'Вызывает func для каждого элемента. Ничего не возвращает',\r\n    example: `\r\n    [\"Bilbo\", \"Gandalf\", \"Nazgul\"].forEach((item, index, array) => {\r\n\r\n        alert(item + 'имеет позицию ' + index + 'в ' + array);\r\n      });`,\r\n  },\r\n  {\r\n    method: '.map(func)',\r\n    description: 'Возвращает новый массив из результатов вызова func для каждого элемента',\r\n    example: `\r\n    let lengths = [\"Bilbo\", \"Gandalf\", \"Nazgul\"].map(item => item.length);\r\n    alert(lengths); // 5,7,6`,\r\n  },\r\n  {\r\n    method: '.sort(func)',\r\n    description: 'Сортирует массив «на месте», а потом возвращает его',\r\n    example: `\r\n    let arr = [ 1, 2, 15 ];\r\n\r\n    // метод сортирует содержимое arr\r\n    arr.sort();\r\n\r\n    alert( arr );  // 1, 15, 2`,\r\n  },\r\n  {\r\n    method: '.reverse()',\r\n    description: 'Меняет порядок следования элементов на противоположный «на месте» и возвращает изменённый массив',\r\n    example: `\r\n    let arr = [1, 2, 3, 4, 5];\r\n    arr.reverse();\r\n\r\n    alert( arr ); // 5,4,3,2,1`,\r\n  },\r\n  {\r\n    method: '.split()',\r\n    description: 'Преобразует строку в массив',\r\n    example: `\r\n    let names = 'Вася, Петя, Маша';\r\n\r\n    let arr = names.split(', ');\r\n\r\n    for (let name of arr) {\r\n        alert( 'Сообщение получат: ' + name +'.'); // Сообщение получат: Вася (и другие имена)\r\n    }`,\r\n  },\r\n  {\r\n    method: '.join()',\r\n    description: 'Преобразует массив в строку',\r\n    example: `\r\n    let arr = ['Вася', 'Петя', 'Маша'];\r\n\r\n    let str = arr.join(';'); // объединить массив в строку через ;\r\n\r\n    alert( str ); // Вася;Петя;Маша`,\r\n  },\r\n  {\r\n    method: '.reduce(func, initial)',\r\n    description:\r\n      'Вычисляет одно значение на основе всего массива, вызывая func для каждого элемента и передавая промежуточный результат между вызовами',\r\n    example: `\r\n    let arr = [1, 2, 3, 4, 5];\r\n\r\n    // убрано начальное значение (нет 0 в конце)\r\n    let result = arr.reduce((sum, current) => sum + current);\r\n    \r\n    alert( result ); // 15`,\r\n  },\r\n  {\r\n    method: 'Array.isArray(arr)',\r\n    description: 'Проверяет, является ли arr массивом',\r\n    example: `\r\n    alert(Array.isArray({})); // false\r\n\r\n    alert(Array.isArray([])); // true`,\r\n  },\r\n  {\r\n    method: '.every(func)',\r\n    description:\r\n      'Проверяет, удовлетворяют ли все элементы массива условию, заданному в передаваемой функции, возвращает true или false',\r\n    example: `\r\n    //Проверка размера всех элементов массива\r\n\r\n    function isBigEnough(element, index, array) {\r\n        return element >= 10;\r\n    }\r\n\r\n    [12, 5, 8, 130, 44].every(isBigEnough);   // false\r\n    [12, 54, 18, 130, 44].every(isBigEnough); // true`,\r\n  },\r\n  {\r\n    method: '.some(func)',\r\n    description:\r\n      'Проверяет, удовлетворяют ли хоть один элемент массива условию, заданному в передаваемой функции, возвращает true или false',\r\n    example: `\r\n    const array = [1, 2, 3, 4, 5];\r\n\r\n    // проверяет каждый элемент на деление на 2\r\n    const even = (element) => element % 2 === 0;\r\n    \r\n    console.log(array.some(even)); // true`,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/methodsArray';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Arrays() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">Методы для массивов</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://learn.javascript.ru/array-methods\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Arrays;\r\n","export const rowsData = [\r\n  {\r\n    method: 'Math.floor()',\r\n    description: 'Округление в меньшую сторону',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Math.ceil()',\r\n    description: 'Округление в большую сторону',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Math.round()',\r\n    description: 'Округление до ближайшего целого',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Math.trunc()',\r\n    description: 'Удаление дробной части без округления',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'parseInt()',\r\n    description: 'Ищет первое целое число в строке',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'parseFloat()',\r\n    description: 'Ищет первое дробное число в строке',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Math.random()',\r\n    description: 'Возвращает псевдослучайное число от 0 до 1',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Math.max(a, b, c...)',\r\n    description: 'Возвращает наибольшее',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Math.min(a, b, c...)',\r\n    description: 'Возвращает наименьшее',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'Math.pow(n, power)',\r\n    description: 'Возводит n в степень power',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/numbers';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Numbers() {\r\n  return (\r\n    <section className=\"block block_size_middle\">\r\n      <h2 className=\"block__title\">Методы для чисел</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://learn.javascript.ru/number\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Numbers;\r\n","export const rowsData = [\r\n  {\r\n    method: '.length',\r\n    description: 'Длина строки (это свойство, не метод)',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.toLowerCase()',\r\n    description: 'Меняет регистр на нижний',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.toUpperCase()',\r\n    description: 'Меняет регистр на верхний',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.indexOf(substr, pos)',\r\n    description: 'Поиск подстроки',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.lastIndexOf(substr, pos)',\r\n    description: 'Поиск подстроки. Ищет с конца',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.includes(substr, pos)',\r\n    description: 'Поиск подстроки substr с позиции pos',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.startsWith(str)',\r\n    description: 'Начинается ли строка с',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.endsWith(str)',\r\n    description: 'Кончается ли строка на',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.slice(start, end)',\r\n    description: 'Часть строки от start до (не включая) end',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '.substring(start, end)',\r\n    description: 'Часть строки между start и end',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/strings';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Strings() {\r\n  return (\r\n    <section className=\"block block_size_middle\">\r\n      <h2 className=\"block__title\">Методы для строк</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://learn.javascript.ru/string\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Strings;\r\n","export const rowsData = [\r\n  {\r\n    method: 'npm install -g create-react-app',\r\n    description: 'Установка Create React App',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm init react-app название_проекта',\r\n    description: 'Создание нового CRA-проекта',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i -g serve',\r\n    description: 'Установка локального сервера',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'serve -s build',\r\n    description: 'Запуск локального сервера. По умолчанию адрес localhost:5000',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/toolsReact';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction ToolsReact() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">Команды React</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://create-react-app.dev/docs/getting-started/\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ToolsReact;\r\n","export const rowsData = [\r\n  {\r\n    method: 'number',\r\n    description: 'целое число или с точкой, а также NaN и Infinity',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'bigint',\r\n    description: 'большие числа > 2 в 53',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'string',\r\n    description: 'строка',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'string',\r\n    description: 'строка',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'boolean',\r\n    description: 'булево: true или false',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'null',\r\n    description: 'для неизвестных значений',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'undefined',\r\n    description: 'для неприсвоенных значений',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'object',\r\n    description: 'для сложных структур данных',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'symbol',\r\n    description: 'для уникальных идентификаторов',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/typeData';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction TypeData() {\r\n  return (\r\n    <section className=\"block block_size_middle\">\r\n      <h2 className=\"block__title\">Типы данных</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <p className=\"block__paragraph\">\r\n        Оператор <span className=\"block__name\">typeof</span> позволяет увидеть, какой тип данных сохранён в переменной.\r\n      </p>\r\n      <ButtonLink url=\"https://learn.javascript.ru/types\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TypeData;\r\n","export const rowsData = [\r\n  {\r\n    method: '+',\r\n    description: 'сложение, действует и для строк',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '-',\r\n    description: 'вычитание',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '*',\r\n    description: 'умножение',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '/',\r\n    description: 'деление',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '=',\r\n    description: 'присваивание',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '++',\r\n    description: 'инкремент, i++ то же, что i=i+1',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '--',\r\n    description: 'декремент, i-- то же, что i=i-1',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '%',\r\n    description: 'остаток от деления',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: '**',\r\n    description: 'возведение в степень',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/operators';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Operators() {\r\n  return (\r\n    <section className=\"block\">\r\n      <h2 className=\"block__title\">Операторы</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://learn.javascript.ru/operators\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Operators;\r\n","export const rowsData = [\r\n  {\r\n    method: 'git clone Адрес_репозитория',\r\n    description: 'Клонирование репозитория из гитхаба на локальное место. Клонирует сразу папку проекта',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git add .',\r\n    description: 'Добавить все файлы в коммит',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git add -A',\r\n    description: 'Добавить все файлы в коммит',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git add -all',\r\n    description: 'Добавить все файлы в коммит',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git commit -m \"комментарий\"',\r\n    description: 'Сделать коммит',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git push',\r\n    description: 'Запушить коммит. Коммит загружается в репозиторий на гитхаб (или другой сервис)',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git pull',\r\n    description: 'Запуллить коммит. Из репозитотрия загружаются последние коммиты на локальный компьютер',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git branch',\r\n    description: 'Посмотреть все существующие ветки',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git branch Название_ветки',\r\n    description: 'Создается новая ветка',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git checkout Название_ветки',\r\n    description: 'Переход в нужную ветку',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git checkout -b Название_ветки',\r\n    description: 'Создать ветку и перейти в эту ветку',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git branch -d Название_ветки',\r\n    description: 'Удалить ветку. Нужно находиться в другой ветке',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git merge Название_ветки',\r\n    description: 'Слияние. Скопировать все изменения из ветки \"Название_ветки\" в текущую ветку, в которой находишься',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git remote add origin Адрес_репозитория',\r\n    description: 'Посмотреть подробный лог коммитов',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git log --oneline',\r\n    description: 'Посмотреть короткий просмотр коммитов',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git diff',\r\n    description: 'Посмотреть изменения в «рабочей зоне»; они маркируются гитом как modifided, new или deleted',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git diff --staged',\r\n    description: 'Посмотреть изменения, добавленные в staged',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git diff a9928ab 11bada1',\r\n    description: 'Сравнить изменения двух коммитов. a9928ab - первые 7 символов хэша',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git commit --amend',\r\n    description: 'Добавить изменения к последнему коммиту',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git revert -m основной_родитель хеш_коммита',\r\n    description:\r\n      'Отмена коммита слияния веток. Опция -m со значением больше 0 указывает на основную ветку, которая будет сохранена',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git revert хеш_коммита',\r\n    description: 'Отмена изменений выбранного коммита. Он не был создан при слиянии, поэтому имеет одного предка',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git stash',\r\n    description:\r\n      'Скрытие незакоммиченных изменений в текущей рабочей ветке. Опция save название_стэша даёт этим изменениям имена',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'git ',\r\n    description: '111',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/git';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Git() {\r\n  return (\r\n    <section className=\"block block_size_big block_git\">\r\n      <h2 className=\"block__title\">Команды Git</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://githowto.com/ru\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Git;\r\n","export const rowsData = [\r\n  {\r\n    method: 'npm init --yes',\r\n    description: 'Инициализация проекта. Создание файла package.json с ответами Да на все вопросы',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i webpack --save-dev',\r\n    description:\r\n      'Установка Webpack, --save-dev - флаг, что данный модуль нужен только в процессе разработки и не нужен в финальной сборке',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i webpack-cli --save-dev',\r\n    description: 'Интерфейс командной строки для Вебпака',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i webpack-dev-server --save-dev',\r\n    description: 'Локальный сервер для вебпака. Работает на localhost:8080',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i @babel/core --save-dev',\r\n    description: 'Бабель - транспилирует JS код ES6 в старый, поддерживаемый старыми браузерами',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i @babel/preset-env --save-dev',\r\n    description:\r\n      'Пресет (правила) для бабеля, по которому он будет транспилировать новый код в старый. Есть и другие. Позволяет указать, в каких версиях браузеров должен работать итоговый код. Данный самый распространенный',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i core-js --save',\r\n    description:\r\n      'core-js - полифилы распространенных методов для совсем старых браузеров. Необходим для случаев, когда даже транспиляция не помогает',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i babel-loader --save-dev',\r\n    description: 'Пакет, который позволяет подключить бабель к «Вебпаку»',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i html-webpack-plugin --save-dev',\r\n    description: 'Плагин для добавления HTML файлов в сборку',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i clean-webpack-plugin --save-dev',\r\n    description: 'Плагин, удаляет содержимое папки dist перед сборкой',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i css-loader --save-dev',\r\n    description: 'Нужен для того, чтобы научить «Вебпак» работать с файлами CSS',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i mini-css-extract-plugin --save-dev',\r\n    description: 'Плагин. Берёт много css-файлов и объединяет их в один',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i postcss-loader --save-dev',\r\n    description: 'Препроцессор для обработки CSS',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i autoprefixer --save-dev',\r\n    description: 'Плагин для PostCSS. Проставляет или удаляет браузерные префиксы',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i cssnano --save-dev',\r\n    description: 'Плагин для PostCSS. Минифицирует CSS код, удаляя пробелы, комменты и прочее',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/webpack';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Webpack() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">Команды Webpack</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://githowto.com/ru\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Webpack;\r\n","export const rowsData = [\r\n  {\r\n    method: 'mongodb.com',\r\n    description: 'Скачать MongoDB',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'mongod',\r\n    description: 'Команда в GitBash - запускает сервер MongoDB',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'https://mongoosejs.com/',\r\n    description: 'Скачать mongoose',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: 'npm i mongoose',\r\n    description: 'Установка пакета Mongoose для связи JS и базы MongoDB',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: `const mongoose = require('mongoose');`,\r\n    description: 'Импорт Mongoose',\r\n    example: ``,\r\n  },\r\n  {\r\n    method: `mongoose.connect('URL', objProp)`,\r\n    description: 'Подключаемся к серверу mongo',\r\n    example: ``,\r\n  },\r\n];\r\n","import { rowsData } from '../../../data/mongo';\r\nimport TableWrap from '../../TableWrap/TableWrap';\r\nimport ButtonLink from '../../ButtonLink/ButtonLink';\r\n\r\nfunction Mongo() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">MongoDB</h2>\r\n      <TableWrap rows={rowsData} />\r\n      <ButtonLink url=\"https://mongoosejs.com/docs/guide.html\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Mongo;\r\n","import ButtonLink from '../../ButtonLink/ButtonLink';\r\nimport Highlight from 'react-highlight';\r\n\r\nfunction aboutRedux() {\r\n  return (\r\n    <section className=\"block block_size_big\">\r\n      <h2 className=\"block__title\">Redux</h2>\r\n      <h3 className=\"block__title\">Сам Redux</h3>\r\n      <p className=\"block__paragraph\">\r\n        Redux — это база данных в программе. Она хранит внутри себя состояние (то есть данные) приложения. Redux, с\r\n        точки зрения кода — это объект, внутри которого лежат данные. Он используется остальными частями приложения для\r\n        их хранения, изменения и извлечения. В терминологии Redux он называется контейнер, так как данные хранятся\r\n        внутри.\r\n      </p>\r\n      <p>Установка:</p>\r\n      <Highlight className=\"javascript\">npm install redux</Highlight>\r\n      <p className=\"block__paragraph\">\r\n        createStore(reducer, initState) - создает локальное хранилище. Первый парамеетр - reducer (ниже о нем написано),\r\n        второй параметр - начальное состояние (например, данные пришедшие с бэкенда или пустой объект или другой\r\n        вариант)\r\n      </p>\r\n      <p className=\"block__paragraph\">\r\n        action - действие. Это обычный js объект, в котором присутствует минимум одно свойство - type\r\n      </p>\r\n      <p className=\"block__paragraph\">\r\n        actionCreator() - функция, которая создаёт действие. Вызов этой функции нужно передавать как аргумент в dispatch\r\n        а в actionCreator передавать необходимое значение. Должна возвращать action (обычный js объект с обязательным\r\n        свойством type)\r\n      </p>\r\n      <p className=\"block__paragraph\">\r\n        reducer(state, action) — чистая функция которая будет отвечать за обновление состояния. Здесь реализовывается\r\n        логика в соответствие с которой будет происходить обновление полей store. Принимает на вход state и action. На\r\n        выходе из функции возвращается новый state . Именно из-за сходства работы этой функции с тем как работает reduce\r\n        , она имеет название reducer\r\n      </p>\r\n      <p className=\"block__paragraph\">.dispatch() - чтобы обновить store необходимо вызвать метод dispatch()</p>\r\n\r\n      <h3 className=\"block__subtitle\">Связь Redux и React</h3>\r\n      <p className=\"block__paragraph\">\r\n        Provider - компонент. Необходим, чтобы store стал доступен во всем приложении. Для этого необходимо обернуть все\r\n        приложение в этот компонент и передать пропс store наше хранилище store. Пример использования:\r\n      </p>\r\n      <Highlight className=\"javascript\">\r\n        {`\r\n        ReactDOM.render(\r\n          <Provider store={store}>\r\n            <App />\r\n          </Provider>,\r\n        document.getElementById('root'));\r\n        `}\r\n      </Highlight>\r\n      <p className=\"block__paragraph\">\r\n        mapStateToProps() - Этот метод вызывается всякий раз, когда происходит обновление store и именно он передаёт\r\n        необходимые свойства из store в компонент\r\n      </p>\r\n      <p className=\"block__paragraph\">\r\n        mapDispatchToProps() - Эта функция необходима для обратной связи компонента со store. Она передаёт в компонент\r\n        методы для обновления необходимого поля store.\r\n      </p>\r\n      <p className=\"block__paragraph\">\r\n        connect() - Эта функция связывает mapStateToProps и mapDispatchToProps с компонентом и передает необходимые поля\r\n        и методы в него. Возвращает она новый компонент-обёртку для вашего компонента\r\n      </p>\r\n      <ButtonLink url=\"https://habr.com/ru/post/498860\" />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default aboutRedux;\r\n","import { useSelector } from 'react-redux';\r\nimport OperatorThis from './in/OperatorThis';\r\nimport Es6 from './in/Es6';\r\nimport Prom from './in/Prom';\r\nimport Proto from './in/Proto';\r\nimport Expr from './in/Expr';\r\nimport Arrays from './in/Arrays';\r\nimport Numbers from './in/Numbers';\r\nimport Strings from './in/Strings';\r\nimport ToolsReact from './in/ToolsReact';\r\nimport TypeData from './in/TypeData';\r\nimport Operators from './in/Operators';\r\nimport Git from './in/Git';\r\nimport Webpack from './in/Webpack';\r\nimport Mongo from './in/Mongo';\r\nimport AboutRedux from './in/AboutRedux';\r\n\r\nfunction Main() {\r\n  const stateBlockJS = useSelector((state) => state.blockJS);\r\n  const stateBlockEnv = useSelector((state) => state.blockEnv);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      {stateBlockJS.aboutRedux && <AboutRedux />}\r\n      {stateBlockJS.es6 && <Es6 />}\r\n      {stateBlockJS.prom && <Prom />}\r\n      {stateBlockJS.proto && <Proto />}\r\n      {stateBlockJS.operatorThis && <OperatorThis />}\r\n      {stateBlockJS.expr && <Expr />}\r\n      {stateBlockJS.toolsReact && <ToolsReact />}\r\n      {stateBlockJS.arrays && <Arrays />}\r\n      {stateBlockJS.numbers && <Numbers />}\r\n      {stateBlockJS.strings && <Strings />}\r\n      {stateBlockJS.typeData && <TypeData />}\r\n      {stateBlockJS.operators && <Operators />}\r\n      {stateBlockEnv.git && <Git />}\r\n      {stateBlockEnv.webpack && <Webpack />}\r\n      {stateBlockEnv.mongo && <Mongo />}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import Header from '../Header/Header';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Main from '../Main/Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <Navigation />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}